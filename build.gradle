rootProject.version = "9.10.0"
group = 'javasabr'

subprojects {

  repositories {
    mavenCentral()
  }

  apply plugin: "java-library"
  apply plugin: "java-test-fixtures"
  apply plugin: 'maven-publish'

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(21)
    }
  }

  javadoc {
    failOnError = false
  }

  test {
    useJUnitPlatform()
    failOnNoDiscoveredTests = false
  }

  dependencies {
    compileOnly libs.jetbrains.annotations
    compileOnly libs.jspecify
    compileOnly libs.lombok
    annotationProcessor libs.lombok

    testImplementation libs.junit.api
    testCompileOnly libs.lombok
    testCompileOnly libs.jetbrains.annotations
    testCompileOnly libs.jspecify
    testRuntimeOnly libs.junit.engine
    testRuntimeOnly libs.junit.platform.launcher
    testAnnotationProcessor libs.lombok
  }

  /*compileJava {
      inputs.property("moduleName", jar.baseName)
      doFirst {
          options.compilerArgs = [
              '--module-path', classpath.asPath,
          ]
          classpath = files()
      }
  }*/

  tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
  }

  tasks.withType(Javadoc).configureEach {
    options.encoding = "UTF-8"
  }

  tasks.register("sourcesJar", Jar) {
    dependsOn "classes"
    group "build"
    archiveClassifier = "sources"
    archiveBaseName = jar.archiveBaseName
    from sourceSets.main.allSource
  }

  tasks.register("javadocJar", Jar) {
    dependsOn "javadoc"
    group "build"
    archiveClassifier = "javadoc"
    archiveBaseName = jar.archiveBaseName
    from sourceSets.main.allSource
  }

  publishing {
    repositories {
      maven {
        name = "GitlabPackages"
        url = uri("https://gitlab.com/api/v4/projects/37512056/packages/maven")
        credentials(HttpHeaderCredentials) {
          name = "Private-Token"
          value = project.findProperty("gitlab.token") ?: System.getenv("GITLAB_TOKEN")
        }
        authentication {
          header(HttpHeaderAuthentication)
        }
      }
    }

    publications {
      mavenJava(MavenPublication) {
        from components.java
        version = rootProject.version
        afterEvaluate {
          artifactId = jar.archiveBaseName.get()
          groupId = rootProject.group
        }
        artifact sourcesJar
        artifact javadocJar
      }
    }
  }

  configurations {
    testArtifacts.extendsFrom testRuntime
  }

  tasks.register('testJar', Jar) {
    archiveClassifier = "test"
    from sourceSets.test.output
  }

  artifacts {
    testArtifacts testJar
  }

  tasks.withType(Test).configureEach {
    maxParallelForks = Runtime.runtime.availableProcessors()
  }
}

wrapper {
  gradleVersion = '9.0.0'
  distributionType = Wrapper.DistributionType.ALL
}
